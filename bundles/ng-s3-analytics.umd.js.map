{"version":3,"file":"ng-s3-analytics.umd.js.map","sources":["ng://ng-s3-analytics/lib/ng-s3-analytics.service.ts","ng://ng-s3-analytics/lib/ng-s3-analytics.component.ts",null,"ng://ng-s3-analytics/lib/environment/environment.ts","ng://ng-s3-analytics/lib/services/analytics/analytics.service.ts","ng://ng-s3-analytics/lib/services/data-storage/data-storage.service.ts","ng://ng-s3-analytics/lib/directives/button/button.directive.ts","ng://ng-s3-analytics/lib/directives/scroll/scroll.directive.ts","ng://ng-s3-analytics/lib/directives/button-hover/button-hover.directive.ts","ng://ng-s3-analytics/lib/services/environment/environment.service.ts","ng://ng-s3-analytics/lib/services/router/router.service.ts","ng://ng-s3-analytics/lib/services/pointer/pointer.service.ts","ng://ng-s3-analytics/lib/services/error-handler/errorHandler.service.ts","ng://ng-s3-analytics/lib/ng-s3-analytics.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgS3AnalyticsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ng-s3-analytics',\n  template: `\n    <p>\n      ng-s3-analytics works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgS3AnalyticsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export let environment = {\n    accessKeyId: '',\n    secretAccessKey: '',\n    sessionToken: '',\n    bucketName: {\n        authenticatedBucket: '',\n        publicBucket: '',\n        screenshotBucket: ''\n    },\n    fileName: '',\n    relativeFolders: [],\n    region: '',\n    isAuth: false,\n    isPageLoadingToBeDetected: true\n};\n\n\n","import { Injectable } from '@angular/core';\nimport * as AWS from 'aws-sdk';\nimport { environment } from '../../environment/environment';\nimport * as uuid from 'uuid';\nimport * as bf from 'buffer';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient } from '@angular/common/http';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n/**\n * Analytics Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalyticsService {\n\n  /**\n   * SessionId of plugin\n   */\n  sessionId: string;\n  demographicInfo: any = {};\n  constructor(private cookieService: CookieService, private httpService: HttpClient) {\n    if (!this.cookieService.check('demographic-info')) {\n      this.getIp();\n    } else {\n      this.demographicInfo = JSON.parse(this.cookieService.get('demographic-info'));\n    }\n    this.setSessionId();\n  }\n\n  /**\n   * Checking whether sessionId present in cookie or not\n   * if no session id cookie present, adding new session id otherwise reusing the session id value\n   */\n  private setSessionId(): void {\n    if (this.cookieService.check('ngS3AnalyticsSessionId')) {\n      this.sessionId = this.cookieService.get('ngS3AnalyticsSessionId');\n    } else {\n      this.sessionId = uuid.v4();\n      this.cookieService.set('ngS3AnalyticsSessionId', this.sessionId, new Date(new Date().getTime() + (1000 * 60 * 60)));\n    }\n  }\n\n  /**\n   * Pushing Analytics data to different bucket based on Authentication flag\n   * @param data \n   */\n  public pushData(data: any): void {\n    if (environment.isAuth) {\n      this.publishTOAuthS3(data);\n    } else {\n      this.publishTOUnAuthS3(data);\n    }\n  }\n\n  /**\n   * Pushing data to UnAuthenticated Bucket S3\n   * @param data \n   */\n  private publishTOUnAuthS3(data: any): void {\n\n    /*** Construct S3 Bucket object */\n    const s3Bucket: AWS.S3 = this.constructS3Object();\n\n    /*** Setting the params for s3 */\n    const params: { Bucket: string, Key: string, Body: string, ContentType: string } = {\n      Bucket: environment.bucketName.publicBucket,\n      Key: `${new Date().toISOString().split('T')[0]}_${this.sessionId}_${new Date().toISOString()}.json`,\n      Body: this.processForAthena(data.eventValues),\n      ContentType: 'json'\n    };\n\n    /*** Pushing the data to s3 */\n    s3Bucket.putObject(params, (err: AWS.AWSError, resData: any) => {\n      if (err) {\n        console.error(err);\n      }\n    });\n  }\n\n  /**\n   * Converting JSON Array to string \n   * @param data \n   */\n  processForAthena(data: Array<AnalyticsBean>): string {\n    return data.map((object: any) => {\n      object['sessionId'] = this.sessionId;\n      return JSON.stringify(object);\n    }).join('\\n');\n  }\n\n  /**\n    * Pushing data to Authenticated Bucket S3\n    * @param data \n    */\n  publishTOAuthS3(data: any) {\n\n    /*** Construct S3 Bucket object */\n    const s3Bucket: AWS.S3 = this.constructS3Object();\n    /*** Setting the params for s3 */\n    const params = {\n      Bucket: environment.bucketName.authenticatedBucket,\n      Key: `${new Date().toISOString().split('T')[0]}_${this.sessionId}_${new Date().toISOString()}.json`,\n      Body: this.processForAthena(data.eventValues),\n      ContentType: 'json'\n    };\n    /*** Pushing the data to s3 */\n    s3Bucket.putObject(params, (err: AWS.AWSError, resData: any) => {\n      if (err) {\n        console.error('error', err);\n      }\n    });\n\n  }\n\n\n  /**\n   * Construct S3 Object using AWS SDK\n   */\n  private constructS3Object(): AWS.S3 {\n    return new AWS.S3({\n      accessKeyId: environment.accessKeyId,\n      secretAccessKey: environment.secretAccessKey,\n      region: environment.region\n    });\n  }\n\n  /**\n   * Uploading captured base64 image to S3\n   * @param image - Base64 String\n   * @param screenshotName - Screenshot name linked with pageLoaded data\n   */\n  public saveScreenshotsInS3(htmlTemplate: string, screenshotName: string): void {\n    // converting the base64 to buffer data\n    // const buffer: Buffer = bf.Buffer.from(image.replace(/^data:image\\/\\w+;base64,/, ''), 'base64');\n    // const buffer: Buffer = bf.Buffer.from(image, 'base64');\n    // constructing the S3 object\n    const s3Bucket: AWS.S3 = this.constructS3Object();\n    // preparing data to be pushed to bucket\n    const params = {\n      Bucket: environment.bucketName.screenshotBucket,\n      Key: `${new Date().toISOString().split('T')[0]}/${this.sessionId}/screenshots/${screenshotName}.html`,\n      Body: htmlTemplate,\n      ContentType: 'text/html'\n    };\n\n    /** Pushing to S3 bucket */\n    s3Bucket.upload(params, (err: AWS.AWSError, resData: any) => {\n      if (err) {\n        console.error(err);\n      }\n    });\n  }\n\n  /**\n   * Pushing console errors to S3 bucket\n   * @param data \n   */\n  public publishConsoleErrors(data: any): void {\n\n    // Configuring the s3\n    const s3Bucket: AWS.S3 = this.constructS3Object();\n    data['sessionId'] = this.sessionId;\n\n    // Setting the params for s3\n    const params = {\n      Bucket: environment.bucketName.authenticatedBucket,\n      Key: `${new Date().toISOString().split('T')[0]}_${this.sessionId}_console_errors_${new Date().getTime()}.json`,\n      Body: JSON.stringify(data),\n      ContentType: 'json'\n    };\n    // Pushing the data to s3\n    s3Bucket.putObject(params, (err: AWS.AWSError, resData: any) => {\n      if (err) {\n        console.log(err);\n      }\n    });\n  }\n\n\n\n  /**\n   * Setting analytics object to be saved in S3 bucket\n   * @param userData - Data transferred to Event Directive\n   * @param eventDetails - Position of events\n   * @param eventName  - Type of event\n   * @param screenshotName  - file name of saved screenshot if the event is PageLoaded\n   */\n  setAnalyticsData(\n    userData: any = {},\n    eventDetails: any,\n    eventName: string,\n    screenshotName: string,\n    eventComponent?: string): AnalyticsBean {\n    const analyticsBean: AnalyticsBean = {\n      eventLabel: eventName,\n      eventComponent: eventComponent ? eventComponent : window.location.pathname.split('?')[0],\n      browser: window.navigator.userAgent,\n      fullURL: window.location.href,\n      resolution: window.innerWidth + 'x' + window.innerHeight,\n      xCoord: eventDetails['clientX'] !== undefined ? eventDetails['clientX'].toString() : '0' || '0',\n      yCoord: eventDetails['clientY'] !== undefined ? eventDetails['clientY'].toString() : '0' || '0',\n      pageXCoord: window.pageXOffset.toString() || '0',\n      pageYCoord: window.pageYOffset.toString() || '0',\n      eventTime: moment.utc(new Date()).format('YYYY-MM-DD HH:mm:ss'),\n      screenshot: screenshotName,\n      additionalInfo: JSON.stringify(userData),\n      utm: this.getUTMParameters(window.location.href),\n      demographicInfo: JSON.stringify(this.demographicInfo)\n    };\n    return analyticsBean;\n  }\n\n  /**\n   * Getting UTM Parameters by processing current pageURL\n   * @param url - Page URL\n   */\n  private getUTMParameters(url: string): string {\n    const utmObject = {};\n    if (url.includes('utm')) {\n      const utmParams = url.split('?')[1].split('&');\n      utmParams.map(param => {\n        const params = param.split('=');\n        utmObject[params[0]] = params[1];\n      });\n    }\n    return JSON.stringify(utmObject);\n  }\n\n  /**\n   * Set user demographic information in cookies\n   */\n  private getIp(): void {\n    this.httpService.get('https://ipapi.co/json/').subscribe(\n      (res: any) => {\n        this.demographicInfo = res;\n        this.cookieService.set('demographic-info', JSON.stringify(res), new Date(new Date().getTime() + (1000 * 60 * 60 * 24 * 7)));\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AnalyticsService } from '../analytics/analytics.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStorageService {\n\n  allDataAnalyticsArray: Array<any> = [];\n  allDataAnalytics: {\n    pageUrl: string,\n    eventValues: Array<any>\n  };\n  previousUrl: string;\n  keys: Array<any> = [];\n  eventCollector = new Map();\n  constructor(private analyticalService: AnalyticsService, private http: HttpClient) { }\n  private routeDetails: any = [];\n  count = 0;\n  setUrlKey(data: string) {\n    let flag = 0;\n    if (this.previousUrl === undefined) {\n      this.eventCollector.set(data, []);\n      this.previousUrl = data;\n    } else if (!(data === this.previousUrl)) {\n      for (const key of Array.from(this.eventCollector.keys())) {\n        if (key === data) {\n          flag = 1;\n          break;\n        }\n      }\n      if (flag === 0) {\n        this.eventCollector.set(data, []);\n      }\n      this.previousUrl = data;\n    }\n  }\n  appendToAnalyticsArray(data: AnalyticsBean) {\n    this.eventCollector.get(this.previousUrl).push(data);\n  }\n\n  pushDataArrayToS3() {\n    this.count++;\n    // this.allDataAnalyticsMap = JSON.parse(JSON.stringify(Array.from(this.eventCollector.keys())));\n    for (const key of Array.from(this.eventCollector.keys())) {\n      this.allDataAnalytics = {\n        pageUrl: key,\n        eventValues: Array.from(this.eventCollector.get(key).values())\n      };\n      this.keys.push(key);\n      if (this.allDataAnalytics.eventValues.length > 0) {\n        this.analyticalService.pushData(this.allDataAnalytics);\n      }\n    }\n    this.eventCollector.clear();\n    for (const key of this.keys) {\n      this.eventCollector.set(key, []);\n    }\n  }\n\n  setRouteDetails(routeDetails: any) {\n    this.routeDetails = routeDetails;\n  }\n\n  getRouteDetails() {\n    return this.routeDetails;\n  }\n\n}\n","import { Directive, Input, HostListener } from '@angular/core';\nimport { DataStorageService } from '../../services/data-storage/data-storage.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\nimport { AnalyticsService } from '../../services/analytics/analytics.service';\n\n/**\n * Button Directive to track click event\n * Selector can be added to any HTML Element\n */\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[track-btn]'\n})\nexport class ButtonDirective {\n\n  // Gets important data about the button explicitly from the application\n  // tslint:disable-next-line: no-input-rename\n  @Input('track-btn') data: any = {};\n\n  eventDetails: any;\n\n  /**\n   * Button Tracking - Constructor\n   * @param dataStorage - DataStorageService\n   * @param analyticsService\n   */\n  constructor(private dataStorage: DataStorageService, private analyticsService: AnalyticsService) { }\n\n\n  /**\n   *  Listen to button click actions\n   */\n  @HostListener('click', ['$event']) onClick($event: any) {\n    this.eventDetails = $event;\n    setTimeout(() => {\n      this.sendData();\n    }, 10);\n  }\n\n  /** Sending data on button click */\n  public sendData(): void {\n    const analyticsBean: AnalyticsBean =\n      this.analyticsService.setAnalyticsData(this.data, this.eventDetails, 'buttonClick', '');\n    this.dataStorage.appendToAnalyticsArray(analyticsBean);\n  }\n}\n","import { Directive, OnChanges, HostListener, Input } from '@angular/core';\nimport { AnalyticsService } from '../../services/analytics/analytics.service';\nimport { DataStorageService } from '../../services/data-storage/data-storage.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[track-scroll]'\n})\nexport class ScrollDirective implements OnChanges {\n\n    // Gets important data about the component explicitly from the application\n    // tslint:disable-next-line: no-input-rename\n    @Input('track-scroll') data: any = {};\n\n    constructor(\n        private analyticsService: AnalyticsService,\n        private dataStorage: DataStorageService\n    ) { }\n\n    // Capture the change in data\n    ngOnChanges(changes: any) {\n        this.data = changes.data.currentValue;\n    }\n\n    // Triggered when any scroll event occurs\n    @HostListener('window:scroll', ['$event']) onScrollEvent($event: any) {\n        setTimeout(() => {\n            this.sendData($event);\n        }, 100);\n    }\n\n\n    public sendData(event: any): void {\n        const analyticsBean: AnalyticsBean =\n            this.analyticsService.setAnalyticsData(this.data, event, 'scroll', '');\n        this.dataStorage.appendToAnalyticsArray(analyticsBean);\n    }\n\n}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport { AnalyticsService } from '../../services/analytics/analytics.service';\nimport { DataStorageService } from '../../services/data-storage/data-storage.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[track-buttonHover]'\n})\nexport class ButtonHoverDirective {\n  /** */\n  eventDetails: any;\n  // Gets important data about the button explicitly from the application\n  // tslint:disable-next-line: no-input-rename\n  @Input('track-buttonHover') data: any = {};\n\n  constructor(private dataStorage: DataStorageService, private analyticsService: AnalyticsService) { }\n\n  // Listen to button hover actions\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any) {\n    this.eventDetails = $event;\n    setTimeout(() => {\n      this.sendData();\n    }, 10);\n  }\n\n  // Sending data on button hover\n  public sendData(): void {\n    const analyticsBean: AnalyticsBean =\n      this.analyticsService.setAnalyticsData(this.data, this.eventDetails, 'buttonHover', '');\n    this.dataStorage.appendToAnalyticsArray(analyticsBean);\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environment/environment';\nimport { CredentialsBean } from '../../analytics-bean/analytics-bean';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EnvironmentService {\n\n  // Sets Whether the user is authenticated or not\n  setAuthentication(isAuth: boolean) {\n    environment.isAuth = isAuth;\n  }\n\n  // Setting credentials on environment\n  setCredentialsToEnvironment(credentials: CredentialsBean, isPageLoadingToBeDetected: boolean) {\n    environment.accessKeyId = credentials.accessKeyId;\n    environment.fileName = credentials.fileName;\n    environment.secretAccessKey = credentials.secretAccessKey;\n    environment.sessionToken = credentials.sessionToken;\n    environment.region = credentials.region;\n    environment.isPageLoadingToBeDetected = isPageLoadingToBeDetected;\n    if (credentials.bucketName.authenticatedBucket !== '' && credentials.bucketName.publicBucket !== '') {\n      environment.bucketName = {\n        authenticatedBucket: credentials.bucketName.authenticatedBucket,\n        publicBucket: credentials.bucketName.publicBucket,\n        screenshotBucket: credentials.bucketName.screenshotBucket\n      };\n    } else {\n      const bucketName = (credentials.bucketName.authenticatedBucket === '') ? credentials.bucketName.publicBucket :\n        credentials.bucketName.authenticatedBucket;\n      environment.bucketName = {\n        authenticatedBucket: bucketName,\n        publicBucket: bucketName,\n        screenshotBucket: credentials.bucketName.screenshotBucket\n      };\n    }\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Router, NavigationEnd, NavigationError } from '@angular/router';\nimport { AnalyticsService } from '../analytics/analytics.service';\nimport { DataStorageService } from '../data-storage/data-storage.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\n// import html2canvas from 'html2canvas';\nimport { DOCUMENT } from '@angular/platform-browser';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterService {\n  analyticsData: AnalyticsBean;\n  constructor(private routes: Router, private analyticsService: AnalyticsService, private dataStorage: DataStorageService,\n    // tslint:disable-next-line: deprecation\n    @Inject(DOCUMENT) private document: any) {\n\n  }\n\n  /**\n   * Tracking router events\n   */\n  public trackRouterEvents(): void {\n    /** Triggered when current page is loaded */\n    this.routes.events.subscribe((event) => {\n      /** Triggered when NavigationEnd event occurs */\n      if (event instanceof NavigationEnd) {\n        this.analyticsPushData(event);\n      }\n\n      /** Triggered when NavigationError event occurs */\n      if (event instanceof NavigationError) {\n        this.analyticsPushData(event);\n      }\n    });\n  }\n\n  /**\n   * Pushing analytics data\n   * @param event - Router Event\n   */\n  public analyticsPushData(event: any): void {\n    const screenshotName = new Date().getTime().toString();\n    this.analyticsData = this.analyticsService.setAnalyticsData({}, {}, 'PageLoaded', `${screenshotName}.html`, event.url);\n    this.waitTillPageLoad(screenshotName);\n    // Data is send only when user configure the page loading to be true\n    this.dataStorage.setUrlKey(this.analyticsData.eventComponent);\n    this.dataStorage.appendToAnalyticsArray(this.analyticsData);\n  }\n\n  /**\n   * Capturing Screenshot of the page\n   * @param screenshotName uploaded screenshot name\n   *\n  public captureScreenshot(screenshotName: string): void {\n    console.log('called');\n    html2canvas(document.body, {\n      logging: true,\n      allowTaint: true,\n      width: document.body.clientWidth,\n      height: document.body.scrollHeight || window.innerHeight\n    }).then((canvas) => {\n      // this.analyticsService.saveScreenshotsInS3(canvas.toDataURL(), screenshotName);\n      console.log('image uploading...');\n    }).catch(error => {\n      console.log('error', error);\n    });\n  }\n  */\n\n\n  /**\n   * Waiting for page to load completely\n   * @param event \n   */\n  waitTillPageLoad(screenshotName: string) {\n    const _self = this;\n    const interval = setInterval(function () {\n      if (this.document.readyState === 'complete') {\n        clearInterval(interval);\n        // _self.captureScreenshot(screenshotName);\n        _self.captureTemplate(screenshotName);\n      }\n    }, 2000);\n  }\n\n  /**\n   * Capture template of loaded view\n   * @param screenshotName - Screenshot image\n   */\n  captureTemplate(screenshotName: string): void {\n    const fullPageHTML = `<html><head>${this.document.head.innerHTML}\n    <style>body {scroll-behavior: smooth;}</style>\n    </head><body>${this.document.body.innerHTML}\n    <script>window.addEventListener(\"message\", (e) => {\n      try{\n        if(e.customData) {\n        var data = JSON.parse(e.customData);\n        if (data.scroll) {\n          window.scroll(0, data.value);\n        };\n      }\n    }catch(e) {console.log(e);}\n    });</script></body></html>`;\n\n    console.log('Full Page HTML ===>', fullPageHTML);\n\n    const reconstructedHTML = fullPageHTML.replace(/src=\\\"\\//g, `src=\"${window.location.origin}/`)\n      .replace(/url\\(\\\"\\//g, `url=\"${window.location.origin}/`)\n      .replace(/href=\"\\//g, `href=\"${window.location.origin}/`)\n      .replace(/src=\\'\\//g, `src='${window.location.origin}/`)\n      .replace(/url\\(\\'\\//g, `url='${window.location.origin}/`)\n      .replace(/href=\\'\\//g, `href='${window.location.origin}/`);\n    console.log('reConstructed HTML ===>', reconstructedHTML);\n    this.analyticsService.saveScreenshotsInS3(reconstructedHTML, screenshotName);\n  }\n}\n","import { Injectable, Input, ElementRef } from '@angular/core';\nimport { DataStorageService } from '../data-storage/data-storage.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\nimport { fromEvent } from 'rxjs';\nimport { AnalyticsService } from '../analytics/analytics.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PointerService {\n\n  eventDetails: any;\n  // tslint:disable-next-line: no-input-rename\n  @Input('track-pointer') data: any = {};\n\n  constructor(private dataStorage: DataStorageService, private analyticsService: AnalyticsService) { }\n\n  /**\n   * Track Mouse Movement\n   */\n  trackMouseMoveEvent() {\n    fromEvent(window, 'mousemove')\n      .subscribe((e: MouseEvent) => {\n        this.eventDetails = e;\n        this.sendData();\n      });\n  }\n\n  /**\n   * Pushing Mouse Move details\n   */\n  public sendData(): void {\n    const analyticsBean: AnalyticsBean =\n      this.analyticsService.setAnalyticsData(this.data, this.eventDetails, 'Mouse Move', '');\n    this.dataStorage.appendToAnalyticsArray(analyticsBean);\n  }\n\n}\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { AnalyticsService } from '../analytics/analytics.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n    constructor(private injector: Injector) {\n        const analyticsService = this.injector.get(AnalyticsService);\n        if (window.console && console.error) {\n            const consoleErrorFnObject = console.error;\n            console.error = function (...error: any[]) {\n                const processedError = error.map(e => {\n                    if (typeof (e) === 'object') {\n                        return JSON.stringify(e);\n                    } else {\n                        return e;\n                    }\n                });\n                const analyticsBean: AnalyticsBean = analyticsService.setAnalyticsData(processedError, {}, 'ConsoleError', '');\n                analyticsService.publishConsoleErrors(analyticsBean);\n                consoleErrorFnObject.call(console, error);\n            };\n        }\n    }\n\n    /** Implementing the method */\n    handleError(error: any) { }\n\n}\n","import { NgModule, ModuleWithProviders, ErrorHandler } from '@angular/core';\nimport { NgS3AnalyticsComponent } from './ng-s3-analytics.component';\nimport { CredentialsBean } from './analytics-bean/analytics-bean';\nimport { ButtonDirective } from './directives/button/button.directive';\nimport { ScrollDirective } from './directives/scroll/scroll.directive';\nimport { ButtonHoverDirective } from './directives/button-hover/button-hover.directive';\nimport { EnvironmentService } from './services/environment/environment.service';\nimport { RouterService } from './services/router/router.service';\nimport { interval } from 'rxjs';\nimport { DataStorageService } from '../lib/services/data-storage/data-storage.service';\nimport { PointerService } from './services/pointer/pointer.service';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GlobalErrorHandler } from './services/error-handler/errorHandler.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [\n    NgS3AnalyticsComponent,\n    ButtonDirective,\n    ScrollDirective,\n    ButtonHoverDirective,\n  ],\n  providers: [\n    DataStorageService,\n    EnvironmentService,\n    PointerService,\n    CookieService\n  ],\n  exports: [\n    NgS3AnalyticsComponent,\n    ButtonDirective,\n    ScrollDirective,\n    ButtonHoverDirective,\n  ]\n})\nexport class NgS3AnalyticsModule {\n\n  private static environmentService = new EnvironmentService();\n\n  constructor(private routerService: RouterService, private dataStorage: DataStorageService, private pointerService: PointerService) {\n    interval(1000 * 10).subscribe(x => {\n      this.dataStorage.pushDataArrayToS3();\n    });\n    this.pointerService.trackMouseMoveEvent();\n    this.routerService.trackRouterEvents();\n  }\n  // Configuring the initial setup for s3 bucket and page loading\n  static forRoot(credentials: CredentialsBean, isPageLoadingToBeDetected: boolean = false): ModuleWithProviders {\n    this.environmentService.setCredentialsToEnvironment(credentials, isPageLoadingToBeDetected);\n    // Assigning the credentials to environment variables\n    return {\n      ngModule: NgS3AnalyticsModule,\n      providers: [{ provide: ErrorHandler, useClass: GlobalErrorHandler }]\n    };\n  }\n\n\n}\n"],"names":["Injectable","Component","uuid.v4","AWS.S3","CookieService","HttpClient","tslib_1.__values","Directive","Input","HostListener","NavigationEnd","NavigationError","Router","Inject","DOCUMENT","fromEvent","Injector","interval","ErrorHandler","NgModule","CommonModule","HttpClientModule"],"mappings":"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"}
