{"version":3,"file":"codaglobal-ng-s3-analytics.umd.js.map","sources":["ng://@codaglobal/ng-s3-analytics/lib/ng-s3-analytics.service.ts","ng://@codaglobal/ng-s3-analytics/lib/ng-s3-analytics.component.ts",null,"ng://@codaglobal/ng-s3-analytics/lib/environment/environment.ts","ng://@codaglobal/ng-s3-analytics/lib/types/event.types.ts","ng://@codaglobal/ng-s3-analytics/lib/services/analytics/analytics.service.ts","ng://@codaglobal/ng-s3-analytics/lib/services/data-storage/data-storage.service.ts","ng://@codaglobal/ng-s3-analytics/lib/directives/button/button.directive.ts","ng://@codaglobal/ng-s3-analytics/lib/directives/scroll/scroll.directive.ts","ng://@codaglobal/ng-s3-analytics/lib/directives/button-hover/button-hover.directive.ts","ng://@codaglobal/ng-s3-analytics/lib/services/environment/environment.service.ts","ng://@codaglobal/ng-s3-analytics/lib/services/router/router.service.ts","ng://@codaglobal/ng-s3-analytics/lib/services/pointer/pointer.service.ts","ng://@codaglobal/ng-s3-analytics/lib/services/error-handler/errorHandler.service.ts","ng://@codaglobal/ng-s3-analytics/lib/directives/key-stroke/key-stroke.directive.ts","ng://@codaglobal/ng-s3-analytics/lib/ng-s3-analytics.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgS3AnalyticsService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ng-s3-analytics',\n  template: `\n    <p>\n      ng-s3-analytics works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgS3AnalyticsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export let environment = {\n    dataCollectionApi: 'https://1xgf5a2bq2.execute-api.ap-south-1.amazonaws.com/dev/',\n    isPageLoadingToBeDetected: true,\n    restrictIPRange: ''\n};\n\n\n","export enum EventLabels {\n    PAGE_LOAD = 'PAGE_LOAD',\n    MOUSE_HOVER = 'MOUSE_HOVER',\n    BUTTON_CLICK = 'BUTTON_CLICK',\n    MOUSE_MOVE = 'MOUSE_MOVE',\n    SCROLL = 'SCROLL',\n    CONSOLE_ERROR = 'CONSOLE_ERROR',\n    KEY_STROKE = 'KEY_STROKE'\n}\n\nexport enum Constants {\n    DEMOGRAPHIC_INFO = 'demographic-info',\n    SESSION_ID = 'ngS3AnalyticsSessionId',\n    DEMOGRAPHIC_API_URL = 'https://ipapi.co/json/'\n}\n\n\nexport class KeyStrokeEventType {\n    key: string; // pressed Key\n    keyCode: string; // pressed Key Code\n    elementId: string; // Id of element\n    isForm: boolean; // is it a form\n    form: string;\n    tagName: string; // tagName of element\n    htmlElementType: string; // type of element\n    value: string; // previous value of the element\n    code: string; // Pressed key label\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environment/environment';\nimport * as uuid from 'uuid';\nimport { AnalyticsBean, PerformanceBean } from '../../analytics-bean/analytics-bean';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { EventLabels, KeyStrokeEventType, Constants } from '../../types/event.types';\n/**\n * Analytics Service\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalyticsService {\n\n  /** SessionId of plugin */\n  sessionId: string;\n  /** Demographic info */\n  demographicInfo: any = {};\n  /** Event label constants */\n  eventLabels = EventLabels;\n  /** Constants */\n  constants = Constants;\n\n  /**\n   * Analytics Service constructor\n   * @param cookieService\n   * @param httpService\n   */\n  constructor(\n    private cookieService: CookieService,\n    private httpService: HttpClient) {\n    if (!this.cookieService.check(this.constants.DEMOGRAPHIC_INFO)) {\n      this.getIp();\n    } else {\n      this.demographicInfo = JSON.parse(this.cookieService.get(this.constants.DEMOGRAPHIC_INFO));\n    }\n    this.setSessionId();\n  }\n\n  /**\n   * Checking whether sessionId present in cookie or not\n   * if no session id cookie present, adding new session id otherwise reusing the session id value\n   */\n  private setSessionId(): void {\n    if (sessionStorage.getItem(this.constants.SESSION_ID)) {\n      this.sessionId = sessionStorage.getItem(this.constants.SESSION_ID);\n    } else {\n      this.sessionId = uuid.v4();\n      sessionStorage.setItem(this.constants.SESSION_ID, this.sessionId);\n    }\n  }\n\n  /**\n   * Checking the IP range to be restrict\n   * @param data - data to be pushed\n   */\n  public pushData(data: any): void {\n    if (this.checkIpRange()) {\n      this.publishTOAuthS3(data);\n    }\n  }\n\n\n  /**\n   * IP range restriction added\n   * @restrictIPRange is a regex\n   * if @restrictIPRange is match with current IP,\n   * the analytics data will be restricted\n   */\n  private checkIpRange(): boolean {\n    const ipRange = environment.restrictIPRange;\n    if (ipRange && this.demographicInfo.ip) {\n      return this.demographicInfo.ip.match(ipRange) ? false : true;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Converting JSON Array to string\n   * @param data\n   */\n  private processForAthena(data: Array<AnalyticsBean>): string {\n    return data.map((object: any) => {\n      object['sessionId'] = this.sessionId;\n      return JSON.stringify(object);\n    }).join('\\n');\n  }\n\n  /**\n    * Preparing data to be pushed to DataStorage\n    * @param data  data to be pushed\n    */\n  private publishTOAuthS3(data: any): void {\n    const filename = `${new Date().toISOString().split('T')[0]}_${this.sessionId}_${new Date().toISOString()}.json`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    this.pushDataToS3(filename, this.processForAthena(data.eventValues), headers);\n  }\n\n\n  /**\n   * Pushing data to corresponding bucket using data collection api\n   * @param path - service path\n   * @param data - data to be pushed\n   */\n  private pushDataToS3(path: string, data: any, headers: HttpHeaders): void {\n    const url = `${environment.dataCollectionApi}${path}`;\n\n    this.httpService.put(url, data, { headers: headers }).subscribe(res => { }, err => {\n      console.log(err);\n    });\n  }\n\n  /**\n   * Save the captured HTML to the data collection\n   * @param htmlTemplate - DOM Content\n   * @param screenshotName - filename to be saved\n   */\n  public saveScreenshotsInS3(htmlTemplate: string, screenshotName: string): void {\n    const filename = `assets/${new Date().toISOString().split('T')[0]}/${this.sessionId}/${screenshotName}.html`;\n    const headers = new HttpHeaders({ 'Content-Type': 'text/html' });\n    this.pushDataToS3(filename, htmlTemplate, headers);\n  }\n\n  /**\n   * Pushing console errors to S3 bucket\n   * @param data \n   */\n  public publishConsoleErrors(data: any): void {\n\n    data['sessionId'] = this.sessionId;\n    const filename = `${new Date().toISOString().split('T')[0]}_${this.sessionId}_console_errors_${new Date().getTime()}.json`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    this.pushDataToS3(filename, data, headers);\n  }\n\n\n\n  /**\n   * Setting analytics object to be saved in S3 bucket\n   * @param userData - Data transferred to Event Directive\n   * @param eventDetails - Position of events\n   * @param eventName  - Type of event\n   * @param screenshotName  - file name of saved screenshot if the event is PageLoaded\n   */\n  public setAnalyticsData(\n    userData: any = {},\n    eventDetails: any,\n    eventName: string,\n    screenshotName: string,\n    optional?: {\n      eventComponent?: string,\n      keyStrokeData?: KeyStrokeEventType\n    }): AnalyticsBean {\n    const analyticsBean: AnalyticsBean = {\n      eventLabel: eventName,\n      eventComponent: optional && optional.eventComponent ? optional.eventComponent : window.location.pathname.split('?')[0],\n      browser: window.navigator.userAgent,\n      fullURL: window.location.href,\n      origin: window.location.origin,\n      resolution: `${window.innerWidth}x${window.innerHeight}`,\n      xCoord: this.getEventDetails(eventDetails['clientX']),\n      yCoord: this.getEventDetails(eventDetails['clientY']),\n      pageXCoord: window.pageXOffset.toString() || '0',\n      pageYCoord: window.pageYOffset.toString() || '0',\n      eventTime: new Date().toISOString(),\n      screenshot: screenshotName,\n      additionalInfo: userData,\n      utm: this.getUTMParameters(window.location.href),\n      demographicInfo: this.demographicInfo,\n      keyStrokeData: optional && optional.keyStrokeData,\n      htmlElement: this.getHtmlElement(eventDetails['target']),\n      performance: this.getPerformanceDetails(),\n    };\n    return analyticsBean;\n  }\n\n  /**\n   * Event details\n   * @param value \n   */\n  private getEventDetails(value: any): string {\n    return value !== undefined ? value.toString() : '0';\n  }\n\n  /**\n   * Get HTML Content\n   * @param targetElement - target element\n   */\n  private getHtmlElement(targetElement: any): string {\n    return targetElement !== undefined ? targetElement['innerHTML'] : '';\n  }\n\n\n  /**\n   * Performance details\n   */\n  private getPerformanceDetails(): PerformanceBean {\n    const performance = window.performance;\n    return {\n      navigation: performance.navigation,\n      timeOrigin: performance.timeOrigin,\n      timing: performance.timing\n    };\n  }\n\n  /**\n   * Memory usage of the application is provided by Google Chrome\n   * @param userAgent - User agent to check the browser\n   */\n  private geMemoryUsageInfo(userAgent: any) {\n    const isChrome = userAgent.split('chrome').length > 1;\n    const memory = isChrome ? window.performance['memory'] : '';\n    return memory;\n  }\n\n  /**\n   * Getting UTM Parameters by processing current pageURL\n   * @param url - Page URL\n   */\n  private getUTMParameters(url: string): any {\n    const utmObject = {};\n    if (url.includes('utm')) {\n      const utmParams = url.split('?')[1].split('&');\n      utmParams.map(param => {\n        const params = param.split('=');\n        utmObject[params[0]] = params[1];\n      });\n    }\n    return utmObject;\n  }\n\n  /**\n   * Set user demographic information in cookies\n   */\n  private getIp(): void {\n    this.httpService.get(this.constants.DEMOGRAPHIC_API_URL).subscribe(\n      (res: any) => {\n        this.demographicInfo = res;\n        this.cookieService.set(\n          this.constants.DEMOGRAPHIC_INFO, JSON.stringify(res),\n          new Date(new Date().getTime() + (1000 * 60 * 60 * 24)));\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AnalyticsService } from '../analytics/analytics.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataStorageService {\n\n  allDataAnalyticsArray: Array<any> = [];\n  allDataAnalytics: {\n    pageUrl: string,\n    eventValues: Array<any>\n  };\n  previousUrl: string;\n  keys: Array<any> = [];\n  eventCollector = new Map();\n  constructor(private analyticalService: AnalyticsService, private http: HttpClient) { }\n  private routeDetails: any = [];\n  count = 0;\n  setUrlKey(data: string) {\n    let flag = 0;\n    if (this.previousUrl === undefined) {\n      this.eventCollector.set(data, []);\n      this.previousUrl = data || '/';\n    } else if (!(data === this.previousUrl)) {\n      for (const key of Array.from(this.eventCollector.keys())) {\n        if (key === data) {\n          flag = 1;\n          break;\n        }\n      }\n      if (flag === 0) {\n        this.eventCollector.set(data, []);\n      }\n      this.previousUrl = data;\n    }\n  }\n  appendToAnalyticsArray(data: AnalyticsBean) {\n    if (this.previousUrl === undefined) {\n      this.setUrlKey(data.eventComponent);\n    }\n    this.eventCollector.get(this.previousUrl).push(data);\n  }\n\n  pushDataArrayToS3() {\n    this.count++;\n    // this.allDataAnalyticsMap = JSON.parse(JSON.stringify(Array.from(this.eventCollector.keys())));\n    for (const key of Array.from(this.eventCollector.keys())) {\n      this.allDataAnalytics = {\n        pageUrl: key,\n        eventValues: Array.from(this.eventCollector.get(key).values())\n      };\n      this.keys.push(key);\n      if (this.allDataAnalytics.eventValues.length > 0) {\n        this.analyticalService.pushData(this.allDataAnalytics);\n      }\n    }\n    this.eventCollector.clear();\n    for (const key of this.keys) {\n      this.eventCollector.set(key, []);\n    }\n  }\n\n  setRouteDetails(routeDetails: any) {\n    this.routeDetails = routeDetails;\n  }\n\n  getRouteDetails() {\n    return this.routeDetails;\n  }\n\n}\n","import { Directive, Input, HostListener } from '@angular/core';\nimport { DataStorageService } from '../../services/data-storage/data-storage.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\nimport { AnalyticsService } from '../../services/analytics/analytics.service';\nimport { EventLabels } from '../../types/event.types';\n\n/**\n * Button Directive to track click event\n * Selector can be added to any HTML Element\n */\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[track-btn]'\n})\nexport class ButtonDirective {\n\n  // Gets important data about the button explicitly from the application\n  // tslint:disable-next-line: no-input-rename\n  @Input('track-btn') data: any = {};\n  eventLabels = EventLabels;\n  eventDetails: any;\n\n  /**\n   * Button Tracking - Constructor\n   * @param dataStorage - DataStorageService\n   * @param analyticsService\n   */\n  constructor(private dataStorage: DataStorageService, private analyticsService: AnalyticsService) { }\n\n\n  /**\n   *  Listen to button click actions\n   */\n  @HostListener('click', ['$event']) onClick($event: any) {\n    this.eventDetails = $event;\n    setTimeout(() => {\n      this.sendData();\n    }, 10);\n  }\n\n  /** Sending data on button click */\n  public sendData(): void {\n    const analyticsBean: AnalyticsBean =\n      this.analyticsService.setAnalyticsData(this.data, this.eventDetails, this.eventLabels.BUTTON_CLICK, '');\n    this.dataStorage.appendToAnalyticsArray(analyticsBean);\n  }\n}\n","import { Directive, OnChanges, HostListener, Input } from '@angular/core';\nimport { AnalyticsService } from '../../services/analytics/analytics.service';\nimport { DataStorageService } from '../../services/data-storage/data-storage.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\nimport { EventLabels } from '../../types/event.types';\n\n@Directive({\n    // tslint:disable-next-line: directive-selector\n    selector: '[track-scroll]'\n})\nexport class ScrollDirective implements OnChanges {\n\n    // Gets important data about the component explicitly from the application\n    // tslint:disable-next-line: no-input-rename\n    @Input('track-scroll') data: any = {};\n    eventLabels = EventLabels;\n\n    constructor(\n        private analyticsService: AnalyticsService,\n        private dataStorage: DataStorageService\n    ) { }\n\n    // Capture the change in data\n    ngOnChanges(changes: any) {\n        this.data = changes.data.currentValue;\n    }\n\n    // Triggered when any scroll event occurs\n    @HostListener('window:scroll', ['$event']) onScrollEvent($event: any) {\n        setTimeout(() => {\n            this.sendData($event);\n        }, 100);\n    }\n\n\n    public sendData(event: any): void {\n        const analyticsBean: AnalyticsBean =\n            this.analyticsService.setAnalyticsData(this.data, event, this.eventLabels.SCROLL, '');\n        this.dataStorage.appendToAnalyticsArray(analyticsBean);\n    }\n\n}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport { AnalyticsService } from '../../services/analytics/analytics.service';\nimport { DataStorageService } from '../../services/data-storage/data-storage.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\nimport { EventLabels } from '../../types/event.types';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[track-buttonHover]'\n})\nexport class ButtonHoverDirective {\n  /** */\n  eventDetails: any;\n  eventLabels = EventLabels;\n  // Gets important data about the button explicitly from the application\n  // tslint:disable-next-line: no-input-rename\n  @Input('track-buttonHover') data: any = {};\n\n  constructor(private dataStorage: DataStorageService, private analyticsService: AnalyticsService) { }\n\n  // Listen to button hover actions\n  @HostListener('mouseover', ['$event']) onMouseOver($event: any) {\n    this.eventDetails = $event;\n    setTimeout(() => {\n      this.sendData();\n    }, 10);\n  }\n\n  // Sending data on button hover\n  public sendData(): void {\n    const analyticsBean: AnalyticsBean =\n      this.analyticsService.setAnalyticsData(this.data, this.eventDetails, this.eventLabels.MOUSE_HOVER, '');\n    this.dataStorage.appendToAnalyticsArray(analyticsBean);\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environment/environment';\nimport { Configuration } from '../../analytics-bean/analytics-bean';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EnvironmentService {\n\n\n  // Setting Configuration on environment\n  setConfigurationToEnvironment(configuration: Configuration, isPageLoadingToBeDetected: boolean) {\n    environment.dataCollectionApi = configuration.dataCollectionApi;\n    environment.isPageLoadingToBeDetected = isPageLoadingToBeDetected;\n    environment.restrictIPRange = configuration.restrictIPRange;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd, NavigationError } from '@angular/router';\nimport { AnalyticsService } from '../analytics/analytics.service';\nimport { DataStorageService } from '../data-storage/data-storage.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\nimport { EventLabels } from '../../types/event.types';\ndeclare let ngS3AnalyticsJS: any;\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterService {\n  analyticsData: AnalyticsBean;\n  eventLabels = EventLabels;\n  navigateOn = '';\n  constructor(private routes: Router, private analyticsService: AnalyticsService, private dataStorage: DataStorageService) {\n\n  }\n\n  /**\n   * Tracking router events\n   */\n  public trackRouterEvents(): void {\n    /** Triggered when current page is loaded */\n    this.routes.events.subscribe((event) => {\n      /** Triggered when NavigationEnd event occurs */\n      if (event instanceof NavigationEnd) {\n        if (this.navigateOn !== event.url) {\n          this.analyticsPushData(event);\n          this.navigateOn = event.url;\n        }\n      } else if (event instanceof NavigationError) {\n        /** Triggered when NavigationError event occurs */\n        this.analyticsPushData(event);\n      }\n    });\n  }\n\n  /**\n   * Pushing analytics data\n   * @param event - Router Event\n   */\n  public analyticsPushData(event: any): void {\n    const screenshotName = new Date().getTime().toString();\n    this.analyticsData = this.analyticsService.setAnalyticsData({}, {}, this.eventLabels.PAGE_LOAD, `${screenshotName}.html`,\n      { eventComponent: event.url });\n    this.waitTillPageLoad(screenshotName);\n    // Data is send only when user configure the page loading to be true\n    this.dataStorage.setUrlKey(this.analyticsData.eventComponent);\n    setTimeout(() => {\n      this.dataStorage.appendToAnalyticsArray(this.analyticsData);\n    }, 0);\n  }\n\n\n  /**\n   * Waiting for page to load completely\n   * @param event \n   */\n  waitTillPageLoad(screenshotName: string) {\n    const _self = this;\n    const interval = setInterval(function () {\n      if (document.readyState === 'complete') {\n        clearInterval(interval);\n        _self.captureTemplate(screenshotName);\n      }\n    }, 1000);\n  }\n\n  /**\n   * Capture template of loaded view\n   * @param screenshotName - Screenshot image\n   */\n  captureTemplate(screenshotName: string): void {\n    const fullPageHTML = ngS3AnalyticsJS.constructHTMLPage(\n      this.processRegexOperations(document.querySelector('head').innerHTML),\n      this.processRegexOperations(document.querySelector('body').innerHTML)\n    );\n    this.analyticsService.saveScreenshotsInS3(fullPageHTML, screenshotName);\n  }\n\n\n  processRegexOperations(text: string): string {\n    return ngS3AnalyticsJS.doRegex(text, window.location.origin);\n  }\n}\n","import { Injectable, Input, ElementRef } from '@angular/core';\nimport { DataStorageService } from '../data-storage/data-storage.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\nimport { fromEvent } from 'rxjs';\nimport { AnalyticsService } from '../analytics/analytics.service';\nimport { EventLabels } from '../../types/event.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PointerService {\n\n  eventLabels = EventLabels;\n  eventDetails: any;\n  // tslint:disable-next-line: no-input-rename\n  @Input('track-pointer') data: any = {};\n\n  constructor(private dataStorage: DataStorageService, private analyticsService: AnalyticsService) { }\n\n  /**\n   * Track Mouse Movement\n   */\n  trackMouseMoveEvent() {\n    fromEvent(window, 'mousemove')\n      .subscribe((e: MouseEvent) => {\n        this.eventDetails = e;\n        this.sendData();\n      });\n  }\n\n  /**\n   * Pushing Mouse Move details\n   */\n  public sendData(): void {\n    const analyticsBean: AnalyticsBean =\n      this.analyticsService.setAnalyticsData(this.data, this.eventDetails, this.eventLabels.MOUSE_MOVE, '');\n    this.dataStorage.appendToAnalyticsArray(analyticsBean);\n  }\n\n}\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { AnalyticsService } from '../analytics/analytics.service';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\nimport { EventLabels } from '../../types/event.types';\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n    eventLabels = EventLabels;\n    constructor(private injector: Injector) {\n        const analyticsService = this.injector.get(AnalyticsService);\n        if (window.console && console.error) {\n            const consoleErrorFnObject = console.error;\n            console.error = function (...error: any[]) {\n                const processedError = error.map(e => {\n                    if (typeof (e) === 'object') {\n                        return JSON.stringify(e);\n                    } else {\n                        return e;\n                    }\n                });\n                // tslint:disable-next-line: max-line-length\n                const analyticsBean: AnalyticsBean = analyticsService.setAnalyticsData(processedError, {}, this.eventLabels.CONSOLE_ERROR, '');\n                analyticsService.publishConsoleErrors(analyticsBean);\n                consoleErrorFnObject.call(console, error);\n            };\n        }\n    }\n\n    /** Implementing the method */\n    handleError(error: any) { }\n\n}\n","import { Directive, HostListener, ElementRef, Renderer2 } from '@angular/core';\nimport { AnalyticsService } from '../../services/analytics/analytics.service';\nimport { DataStorageService } from '../../services/data-storage/data-storage.service';\nimport { KeyStrokeEventType, EventLabels } from '../../types/event.types';\nimport { AnalyticsBean } from '../../analytics-bean/analytics-bean';\nimport * as uuid from 'uuid';\n\n// tslint:disable-next-line: directive-selector\n@Directive({ selector: '[track-keyStroke]' })\nexport class KeyStrokeDirective {\n\n    /** Event Labels Constants */\n    eventLabels = EventLabels;\n\n    /**\n     * Dependencies\n     * @param dataStorage\n     * @param analyticsService\n     * @param el - Element Reference\n     * @param renderer - Renderer\n     */\n    constructor(\n        private dataStorage: DataStorageService,\n        private analyticsService: AnalyticsService,\n        private el: ElementRef,\n        private renderer: Renderer2) {\n\n        /**\n         * if Id doesn't belongs to the element, which is being tracked,\n         * Adding a dynamic Id\n         */\n        if (!this.el.nativeElement.id) {\n            const dynamicId = `key_stroke_element_${uuid.v4()}`;\n            this.renderer.setAttribute(this.el.nativeElement, 'id', dynamicId);\n        }\n\n    }\n\n    /**\n     * Tracking Key press events using host listener\n     * Generating a data bean in a specified format\n     * @param $event - KeyPress Event\n     */\n    @HostListener('keypress', ['$event']) onKeyStroke($event: any) {\n        const keyStroke: KeyStrokeEventType = new KeyStrokeEventType();\n\n        keyStroke.elementId = $event.target.id;\n        keyStroke.key = $event.key;\n        keyStroke.code = $event.code;\n        keyStroke.keyCode = $event.keyCode.toString();\n        keyStroke.isForm = $event.target.form !== undefined;\n        keyStroke.form = $event.target.form !== undefined ? JSON.stringify($event.target.form.elements) : '';\n        keyStroke.tagName = $event.target.tagName;\n        keyStroke.htmlElementType = $event.target.type;\n        keyStroke.value = $event.target.value;\n\n        this.sendData(keyStroke, $event);\n    }\n\n    /**\n     * Sending data\n     * @param keyStroke - Captured KeyStroke data\n     * @param eventDetails - Key Press event details\n     */\n    private sendData(keyStroke: KeyStrokeEventType, eventDetails: any): void {\n        const analyticsBean: AnalyticsBean =\n            this.analyticsService.setAnalyticsData({},\n                eventDetails,\n                this.eventLabels.KEY_STROKE, '',\n                { keyStrokeData: keyStroke });\n        this.dataStorage.appendToAnalyticsArray(analyticsBean);\n    }\n}\n","import { NgModule, ModuleWithProviders, ErrorHandler } from '@angular/core';\nimport { NgS3AnalyticsComponent } from './ng-s3-analytics.component';\nimport { Configuration } from './analytics-bean/analytics-bean';\nimport { ButtonDirective } from './directives/button/button.directive';\nimport { ScrollDirective } from './directives/scroll/scroll.directive';\nimport { ButtonHoverDirective } from './directives/button-hover/button-hover.directive';\nimport { EnvironmentService } from './services/environment/environment.service';\nimport { RouterService } from './services/router/router.service';\nimport { interval } from 'rxjs';\nimport { DataStorageService } from '../lib/services/data-storage/data-storage.service';\nimport { PointerService } from './services/pointer/pointer.service';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GlobalErrorHandler } from './services/error-handler/errorHandler.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { KeyStrokeDirective } from './directives/key-stroke/key-stroke.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [\n    NgS3AnalyticsComponent,\n    ButtonDirective,\n    ScrollDirective,\n    ButtonHoverDirective,\n    KeyStrokeDirective\n  ],\n  providers: [\n    DataStorageService,\n    EnvironmentService,\n    PointerService,\n    CookieService\n  ],\n  exports: [\n    NgS3AnalyticsComponent,\n    ButtonDirective,\n    ScrollDirective,\n    ButtonHoverDirective,\n    KeyStrokeDirective\n  ]\n})\nexport class NgS3AnalyticsModule {\n\n  private static environmentService = new EnvironmentService();\n\n  constructor(private routerService: RouterService, private dataStorage: DataStorageService, private pointerService: PointerService) {\n    window.addEventListener('beforeunload', (e) => {\n      this.dataStorage.pushDataArrayToS3();\n    });\n    interval(1000 * 2).subscribe(x => {\n      this.dataStorage.pushDataArrayToS3();\n    });\n    this.pointerService.trackMouseMoveEvent();\n    this.routerService.trackRouterEvents();\n  }\n  // Configuring the initial setup for s3 bucket and page loading\n  static forRoot(configuration: Configuration, isPageLoadingToBeDetected: boolean = false): ModuleWithProviders {\n    this.environmentService.setConfigurationToEnvironment(configuration, isPageLoadingToBeDetected);\n    // Assigning the configuration to environment variables\n    return {\n      ngModule: NgS3AnalyticsModule,\n      providers: [{ provide: ErrorHandler, useClass: GlobalErrorHandler }]\n    };\n  }\n\n\n}\n"],"names":["Injectable","Component","uuid.v4","HttpHeaders","CookieService","HttpClient","tslib_1.__values","Directive","Input","HostListener","NavigationEnd","NavigationError","Router","fromEvent","Injector","ElementRef","Renderer2","interval","ErrorHandler","NgModule","CommonModule","HttpClientModule"],"mappings":";;;;;;;;;;AAAA;QAOE;SAAiB;;oBALlBA,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;mCAJD;KAQC;;;;;;ACRD;QAaE;SAAiB;;;;QAEjB,yCAAQ;;;YAAR;aACC;;oBAdFC,YAAS,SAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,QAAQ,EAAE,uDAIT;wBACD,MAAM,EAAE,EAAE;qBACX;;;QAQD,6BAAC;KAAA;;IClBD;;;;;;;;;;;;;;AAcA,sBA+FyB,CAAC;QACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9E,IAAI,CAAC;YAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ;YAAE,OAAO;gBAC1C,IAAI,EAAE;oBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;wBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;oBACnC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;iBAC3C;aACJ,CAAC;QACF,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;IAC3F,CAAC;;;;;;;ACvHD,QAAW,WAAW,GAAG;QACrB,iBAAiB,EAAE,8DAA8D;QACjF,yBAAyB,EAAE,IAAI;QAC/B,eAAe,EAAE,EAAE;KACtB;;;;;;;;QCHG,WAAY,WAAW;QACvB,aAAc,aAAa;QAC3B,cAAe,cAAc;QAC7B,YAAa,YAAY;QACzB,QAAS,QAAQ;QACjB,eAAgB,eAAe;QAC/B,YAAa,YAAY;;;;QAIzB,kBAAmB,kBAAkB;QACrC,YAAa,wBAAwB;QACrC,qBAAsB,wBAAwB;;IAIlD;QAAA;SAUC;QAAD,yBAAC;IAAD,CAAC,IAAA;;;;;;AC3BD;;;AAUA;;;;;;QAmBE,0BACU,aAA4B,EAC5B,WAAuB;YADvB,kBAAa,GAAb,aAAa,CAAe;YAC5B,gBAAW,GAAX,WAAW,CAAY;;YAbjC,oBAAe,GAAQ,EAAE,CAAC;;YAE1B,gBAAW,GAAG,WAAW,CAAC;;YAE1B,cAAS,GAAG,SAAS,CAAC;YAUpB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE;gBAC9D,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;iBAAM;gBACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC;aAC5F;YACD,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;;;;;;;;;;;QAMO,uCAAY;;;;;;YAApB;gBACE,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;oBACrD,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;iBACpE;qBAAM;oBACL,IAAI,CAAC,SAAS,GAAGC,OAAO,EAAE,CAAC;oBAC3B,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;iBACnE;aACF;;;;;;;;;;QAMM,mCAAQ;;;;;YAAf,UAAgB,IAAS;gBACvB,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;oBACvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;iBAC5B;aACF;;;;;;;;;;;;;;;QASO,uCAAY;;;;;;;;YAApB;;oBACQ,OAAO,GAAG,WAAW,CAAC,eAAe;gBAC3C,IAAI,OAAO,IAAI,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE;oBACtC,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;iBAC9D;qBAAM;oBACL,OAAO,IAAI,CAAC;iBACb;aACF;;;;;;;;;;;QAMO,2CAAgB;;;;;;YAAxB,UAAyB,IAA0B;gBAAnD,iBAKC;gBAJC,OAAO,IAAI,CAAC,GAAG;;;mBAAC,UAAC,MAAW;oBAC1B,MAAM,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC;oBACrC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBAC/B,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACf;;;;;;;;;;;QAMO,0CAAe;;;;;;YAAvB,UAAwB,IAAS;;oBACzB,QAAQ,GAAM,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAI,IAAI,CAAC,SAAS,SAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,UAAO;;oBACzG,OAAO,GAAG,IAAIC,cAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;gBACvE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,OAAO,CAAC,CAAC;aAC/E;;;;;;;;;;;;;;QAQO,uCAAY;;;;;;;;YAApB,UAAqB,IAAY,EAAE,IAAS,EAAE,OAAoB;;oBAC1D,GAAG,GAAG,KAAG,WAAW,CAAC,iBAAiB,GAAG,IAAM;gBAErD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS;;;mBAAC,UAAA,GAAG,KAAO;;;mBAAE,UAAA,GAAG;oBAC7E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAClB,EAAC,CAAC;aACJ;;;;;;;;;;;;QAOM,8CAAmB;;;;;;YAA1B,UAA2B,YAAoB,EAAE,cAAsB;;oBAC/D,QAAQ,GAAG,YAAU,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAI,IAAI,CAAC,SAAS,SAAI,cAAc,UAAO;;oBACtG,OAAO,GAAG,IAAIA,cAAW,CAAC,EAAE,cAAc,EAAE,WAAW,EAAE,CAAC;gBAChE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;aACpD;;;;;;;;;;QAMM,+CAAoB;;;;;YAA3B,UAA4B,IAAS;gBAEnC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;;oBAC7B,QAAQ,GAAM,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAI,IAAI,CAAC,SAAS,wBAAmB,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,UAAO;;oBACpH,OAAO,GAAG,IAAIA,cAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;gBACvE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;aAC5C;;;;;;;;;;;;;;;;;QAWM,2CAAgB;;;;;;;;;YAAvB,UACE,QAAkB,EAClB,YAAiB,EACjB,SAAiB,EACjB,cAAsB,EACtB,QAGC;gBAPD,yBAAA;oBAAA,aAAkB;;;oBAQZ,aAAa,GAAkB;oBACnC,UAAU,EAAE,SAAS;oBACrB,cAAc,EAAE,QAAQ,IAAI,QAAQ,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtH,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,SAAS;oBACnC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;oBAC7B,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM;oBAC9B,UAAU,EAAK,MAAM,CAAC,UAAU,SAAI,MAAM,CAAC,WAAa;oBACxD,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;oBACrD,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;oBACrD,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,GAAG;oBAChD,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,GAAG;oBAChD,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;oBACnC,UAAU,EAAE,cAAc;oBAC1B,cAAc,EAAE,QAAQ;oBACxB,GAAG,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;oBAChD,eAAe,EAAE,IAAI,CAAC,eAAe;oBACrC,aAAa,EAAE,QAAQ,IAAI,QAAQ,CAAC,aAAa;oBACjD,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;oBACxD,WAAW,EAAE,IAAI,CAAC,qBAAqB,EAAE;iBAC1C;gBACD,OAAO,aAAa,CAAC;aACtB;;;;;;;;;;;QAMO,0CAAe;;;;;;YAAvB,UAAwB,KAAU;gBAChC,OAAO,KAAK,KAAK,SAAS,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;aACrD;;;;;;;;;;;QAMO,yCAAc;;;;;;YAAtB,UAAuB,aAAkB;gBACvC,OAAO,aAAa,KAAK,SAAS,GAAG,aAAa,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;aACtE;;;;;;;;;QAMO,gDAAqB;;;;;YAA7B;;oBACQ,WAAW,GAAG,MAAM,CAAC,WAAW;gBACtC,OAAO;oBACL,UAAU,EAAE,WAAW,CAAC,UAAU;oBAClC,UAAU,EAAE,WAAW,CAAC,UAAU;oBAClC,MAAM,EAAE,WAAW,CAAC,MAAM;iBAC3B,CAAC;aACH;;;;;;;;;;;QAMO,4CAAiB;;;;;;YAAzB,UAA0B,SAAc;;oBAChC,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC;;oBAC/C,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAC3D,OAAO,MAAM,CAAC;aACf;;;;;;;;;;;QAMO,2CAAgB;;;;;;YAAxB,UAAyB,GAAW;;oBAC5B,SAAS,GAAG,EAAE;gBACpB,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;;wBACjB,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;oBAC9C,SAAS,CAAC,GAAG;;;uBAAC,UAAA,KAAK;;4BACX,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;wBAC/B,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;qBAClC,EAAC,CAAC;iBACJ;gBACD,OAAO,SAAS,CAAC;aAClB;;;;;;;;;QAKO,gCAAK;;;;;YAAb;gBAAA,iBASC;gBARC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,SAAS;;;mBAChE,UAAC,GAAQ;oBACP,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;oBAC3B,KAAI,CAAC,aAAa,CAAC,GAAG,CACpB,KAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EACpD,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;iBAC3D,EACF,CAAC;aACH;;oBA3OFH,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;wBARQI,gBAAa;wBACbC,aAAU;;;;+BALnB;KAsPC;;;;;;;QCpOC,4BAAoB,iBAAmC,EAAU,IAAgB;YAA7D,sBAAiB,GAAjB,iBAAiB,CAAkB;YAAU,SAAI,GAAJ,IAAI,CAAY;YARjF,0BAAqB,GAAe,EAAE,CAAC;YAMvC,SAAI,GAAe,EAAE,CAAC;YACtB,mBAAc,GAAG,IAAI,GAAG,EAAE,CAAC;YAEnB,iBAAY,GAAQ,EAAE,CAAC;YAC/B,UAAK,GAAG,CAAC,CAAC;SAF4E;;;;;QAGtF,sCAAS;;;;YAAT,UAAU,IAAY;;;oBAChB,IAAI,GAAG,CAAC;gBACZ,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;oBAClC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;oBAClC,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,GAAG,CAAC;iBAChC;qBAAM,IAAI,EAAE,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE;;wBACvC,KAAkB,IAAA,KAAAC,SAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAA,gBAAA,4BAAE;4BAArD,IAAM,GAAG,WAAA;4BACZ,IAAI,GAAG,KAAK,IAAI,EAAE;gCAChB,IAAI,GAAG,CAAC,CAAC;gCACT,MAAM;6BACP;yBACF;;;;;;;;;;;;;;;oBACD,IAAI,IAAI,KAAK,CAAC,EAAE;wBACd,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;qBACnC;oBACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;iBACzB;aACF;;;;;QACD,mDAAsB;;;;YAAtB,UAAuB,IAAmB;gBACxC,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;oBAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;iBACrC;gBACD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACtD;;;;QAED,8CAAiB;;;YAAjB;;gBACE,IAAI,CAAC,KAAK,EAAE,CAAC;;;oBAEb,KAAkB,IAAA,KAAAA,SAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAA,gBAAA,4BAAE;wBAArD,IAAM,GAAG,WAAA;wBACZ,IAAI,CAAC,gBAAgB,GAAG;4BACtB,OAAO,EAAE,GAAG;4BACZ,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;yBAC/D,CAAC;wBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBACpB,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;4BAChD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;yBACxD;qBACF;;;;;;;;;;;;;;;gBACD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;;oBAC5B,KAAkB,IAAA,KAAAA,SAAA,IAAI,CAAC,IAAI,CAAA,gBAAA,4BAAE;wBAAxB,IAAM,GAAG,WAAA;wBACZ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;qBAClC;;;;;;;;;;;;;;;aACF;;;;;QAED,4CAAe;;;;YAAf,UAAgB,YAAiB;gBAC/B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;aAClC;;;;QAED,4CAAe;;;YAAf;gBACE,OAAO,IAAI,CAAC,YAAY,CAAC;aAC1B;;oBAlEFN,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;wBANQ,gBAAgB;wBAChBK,aAAU;;;;iCAFnB;KAyEC;;;;;;ACzED;;;;AAUA;;;;;;QAiBE,yBAAoB,WAA+B,EAAU,gBAAkC;YAA3E,gBAAW,GAAX,WAAW,CAAoB;YAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;;;YAT3E,SAAI,GAAQ,EAAE,CAAC;YACnC,gBAAW,GAAG,WAAW,CAAC;SAQ0E;;;;;;;;;QAMjE,iCAAO;;;;;YAA1C,UAA2C,MAAW;gBAAtD,iBAKC;gBAJC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;gBAC3B,UAAU;;mBAAC;oBACT,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB,GAAE,EAAE,CAAC,CAAC;aACR;;;;;;QAGM,kCAAQ;;;;YAAf;;oBACQ,aAAa,GACjB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,CAAC;gBACzG,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;aACxD;;oBAnCFE,YAAS,SAAC;;wBAET,QAAQ,EAAE,aAAa;qBACxB;;;;wBAZQ,kBAAkB;wBAElB,gBAAgB;;;;2BAetBC,QAAK,SAAC,WAAW;8BAejBC,eAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;QAanC,sBAAC;KAAA;;;;;;AC9CD;QAiBI,yBACY,gBAAkC,EAClC,WAA+B;YAD/B,qBAAgB,GAAhB,gBAAgB,CAAkB;YAClC,gBAAW,GAAX,WAAW,CAAoB;;;YALpB,SAAI,GAAQ,EAAE,CAAC;YACtC,gBAAW,GAAG,WAAW,CAAC;SAKrB;;;;;;;QAGL,qCAAW;;;;;;YAAX,UAAY,OAAY;gBACpB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;aACzC;;;;;;;QAG0C,uCAAa;;;;;;YAAxD,UAAyD,MAAW;gBAApE,iBAIC;gBAHG,UAAU;;mBAAC;oBACP,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBACzB,GAAE,GAAG,CAAC,CAAC;aACX;;;;;QAGM,kCAAQ;;;;YAAf,UAAgB,KAAU;;oBAChB,aAAa,GACf,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC;gBACzF,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;aAC1D;;oBAjCJF,YAAS,SAAC;;wBAEP,QAAQ,EAAE,gBAAgB;qBAC7B;;;;wBARQ,gBAAgB;wBAChB,kBAAkB;;;;2BAYtBC,QAAK,SAAC,cAAc;oCAcpBC,eAAY,SAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;;QAa7C,sBAAC;KAAA;;;;;;ACzCD;QAkBE,8BAAoB,WAA+B,EAAU,gBAAkC;YAA3E,gBAAW,GAAX,WAAW,CAAoB;YAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;YAL/F,gBAAW,GAAG,WAAW,CAAC;;;YAGE,SAAI,GAAQ,EAAE,CAAC;SAEyD;;;;;;;QAG7D,0CAAW;;;;;;YAAlD,UAAmD,MAAW;gBAA9D,iBAKC;gBAJC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;gBAC3B,UAAU;;mBAAC;oBACT,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB,GAAE,EAAE,CAAC,CAAC;aACR;;;;;;QAGM,uCAAQ;;;;;YAAf;;oBACQ,aAAa,GACjB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC;gBACxG,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;aACxD;;oBA3BFF,YAAS,SAAC;;wBAET,QAAQ,EAAE,qBAAqB;qBAChC;;;;wBAPQ,kBAAkB;wBADlB,gBAAgB;;;;2BAetBC,QAAK,SAAC,mBAAmB;kCAKzBC,eAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;;QAavC,2BAAC;KAAA;;;;;;ACjCD;QAIA;SAaC;;;;;;;;QALC,0DAA6B;;;;;;;YAA7B,UAA8B,aAA4B,EAAE,yBAAkC;gBAC5F,WAAW,CAAC,iBAAiB,GAAG,aAAa,CAAC,iBAAiB,CAAC;gBAChE,WAAW,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;gBAClE,WAAW,CAAC,eAAe,GAAG,aAAa,CAAC,eAAe,CAAC;aAC7D;;oBAZFT,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;iCAPD;KAkBC;;;;;;AClBD;QAcE,uBAAoB,MAAc,EAAU,gBAAkC,EAAU,WAA+B;YAAnG,WAAM,GAAN,MAAM,CAAQ;YAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;YAAU,gBAAW,GAAX,WAAW,CAAoB;YAFvH,gBAAW,GAAG,WAAW,CAAC;YAC1B,eAAU,GAAG,EAAE,CAAC;SAGf;;;;;;;;QAKM,yCAAiB;;;;YAAxB;gBAAA,iBAcC;;gBAZC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS;;;mBAAC,UAAC,KAAK;;oBAEjC,IAAI,KAAK,YAAYU,kBAAa,EAAE;wBAClC,IAAI,KAAI,CAAC,UAAU,KAAK,KAAK,CAAC,GAAG,EAAE;4BACjC,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;4BAC9B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC;yBAC7B;qBACF;yBAAM,IAAI,KAAK,YAAYC,oBAAe,EAAE;;wBAE3C,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;qBAC/B;iBACF,EAAC,CAAC;aACJ;;;;;;;;;;QAMM,yCAAiB;;;;;YAAxB,UAAyB,KAAU;gBAAnC,iBAUC;;oBATO,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;gBACtD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAK,cAAc,UAAO,EACtH,EAAE,cAAc,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;gBACjC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;;gBAEtC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;gBAC9D,UAAU;;mBAAC;oBACT,KAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;iBAC7D,GAAE,CAAC,CAAC,CAAC;aACP;;;;;;;;;;QAOD,wCAAgB;;;;;YAAhB,UAAiB,cAAsB;;oBAC/B,KAAK,GAAG,IAAI;;oBACZ,QAAQ,GAAG,WAAW;;mBAAC;oBAC3B,IAAI,QAAQ,CAAC,UAAU,KAAK,UAAU,EAAE;wBACtC,aAAa,CAAC,QAAQ,CAAC,CAAC;wBACxB,KAAK,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;qBACvC;iBACF,GAAE,IAAI,CAAC;aACT;;;;;;;;;;QAMD,uCAAe;;;;;YAAf,UAAgB,cAAsB;;oBAC9B,YAAY,GAAG,eAAe,CAAC,iBAAiB,CACpD,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,EACrE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CACtE;gBACD,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;aACzE;;;;;QAGD,8CAAsB;;;;YAAtB,UAAuB,IAAY;gBACjC,OAAO,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aAC9D;;oBA5EFX,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;wBARQY,WAAM;wBACN,gBAAgB;wBAChB,kBAAkB;;;;4BAH3B;KAoFC;;;;;;ACpFD;QAiBE,wBAAoB,WAA+B,EAAU,gBAAkC;YAA3E,gBAAW,GAAX,WAAW,CAAoB;YAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;YAL/F,gBAAW,GAAG,WAAW,CAAC;;YAGF,SAAI,GAAQ,EAAE,CAAC;SAE6D;;;;;;;;QAKpG,4CAAmB;;;;YAAnB;gBAAA,iBAMC;gBALCC,cAAS,CAAC,MAAM,EAAE,WAAW,CAAC;qBAC3B,SAAS;;;eAAC,UAAC,CAAa;oBACvB,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC;oBACtB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB,EAAC,CAAC;aACN;;;;;;;;QAKM,iCAAQ;;;;YAAf;;oBACQ,aAAa,GACjB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC;gBACvG,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;aACxD;;oBA9BFb,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;wBARQ,kBAAkB;wBAGlB,gBAAgB;;;;2BAWtBQ,QAAK,SAAC,eAAe;;;6BAfxB;KAuCC;;;;;;ACvCD,IAIA;QAGI,4BAAoB,QAAkB;YAAlB,aAAQ,GAAR,QAAQ,CAAU;YADtC,gBAAW,GAAG,WAAW,CAAC;;gBAEhB,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC;YAC5D,IAAI,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE;;oBAC3B,sBAAoB,GAAG,OAAO,CAAC,KAAK;gBAC1C,OAAO,CAAC,KAAK;;;mBAAG;oBAAU,eAAe;yBAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;wBAAf,0BAAe;;;wBAC/B,cAAc,GAAG,KAAK,CAAC,GAAG;;;uBAAC,UAAA,CAAC;wBAC9B,IAAI,QAAQ,CAAC,CAAC,KAAK,QAAQ,EAAE;4BACzB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;yBAC5B;6BAAM;4BACH,OAAO,CAAC,CAAC;yBACZ;qBACJ,EAAC;;;wBAEI,aAAa,GAAkB,gBAAgB,CAAC,gBAAgB,CAAC,cAAc,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,CAAC;oBAC9H,gBAAgB,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;oBACrD,sBAAoB,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC7C,CAAA,CAAC;aACL;SACJ;;;;;;;QAGD,wCAAW;;;;;YAAX,UAAY,KAAU,KAAK;;oBAxB9BR,aAAU;;;;wBAJwBc,WAAQ;;;QA8B3C,yBAAC;KAAA,IAAA;;;;;;AC9BD;AAQA;;;;;;;;QAaI,4BACY,WAA+B,EAC/B,gBAAkC,EAClC,EAAc,EACd,QAAmB;YAHnB,gBAAW,GAAX,WAAW,CAAoB;YAC/B,qBAAgB,GAAhB,gBAAgB,CAAkB;YAClC,OAAE,GAAF,EAAE,CAAY;YACd,aAAQ,GAAR,QAAQ,CAAW;;YAb/B,gBAAW,GAAG,WAAW,CAAC;;;;;YAmBtB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE;;oBACrB,SAAS,GAAG,wBAAsBZ,OAAO,EAAI;gBACnD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;aACtE;SAEJ;;;;;;;;;;;;QAOqC,wCAAW;;;;;;YAAjD,UAAkD,MAAW;;oBACnD,SAAS,GAAuB,IAAI,kBAAkB,EAAE;gBAE9D,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;gBACvC,SAAS,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;gBAC3B,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBAC7B,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBAC9C,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,SAAS,CAAC;gBACpD,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;gBACrG,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;gBAC1C,SAAS,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;gBAC/C,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;gBAEtC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;aACpC;;;;;;;;;;;;;QAOO,qCAAQ;;;;;;;YAAhB,UAAiB,SAA6B,EAAE,YAAiB;;oBACvD,aAAa,GACf,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,EACrC,YAAY,EACZ,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,EAAE,EAC/B,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC;gBACrC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;aAC1D;;oBA/DJK,YAAS,SAAC,EAAE,QAAQ,EAAE,mBAAmB,EAAE;;;;wBANnC,kBAAkB;wBADlB,gBAAgB;wBADSQ,aAAU;wBAAEC,YAAS;;;;kCA2ClDP,eAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;;QA6BxC,yBAAC;KAAA;;;;;;ACxED;QA+CE,6BAAoB,aAA4B,EAAU,WAA+B,EAAU,cAA8B;YAAjI,iBASC;YATmB,kBAAa,GAAb,aAAa,CAAe;YAAU,gBAAW,GAAX,WAAW,CAAoB;YAAU,mBAAc,GAAd,cAAc,CAAgB;YAC/H,MAAM,CAAC,gBAAgB,CAAC,cAAc;;;eAAE,UAAC,CAAC;gBACxC,KAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;aACtC,EAAC,CAAC;YACHQ,aAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,SAAS;;;eAAC,UAAA,CAAC;gBAC5B,KAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;aACtC,EAAC,CAAC;YACH,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC;YAC1C,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;SACxC;;;;;;;;QAEM,2BAAO;;;;;;;YAAd,UAAe,aAA4B,EAAE,yBAA0C;gBAA1C,0CAAA;oBAAA,iCAA0C;;gBACrF,IAAI,CAAC,kBAAkB,CAAC,6BAA6B,CAAC,aAAa,EAAE,yBAAyB,CAAC,CAAC;;gBAEhG,OAAO;oBACL,QAAQ,EAAE,mBAAmB;oBAC7B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAEC,eAAY,EAAE,QAAQ,EAAE,kBAAkB,EAAE,CAAC;iBACrE,CAAC;aACH;QApBc,sCAAkB,GAAG,IAAI,kBAAkB,EAAE,CAAC;;oBA5B9DC,WAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;4BACZC,mBAAgB;yBACjB;wBACD,YAAY,EAAE;4BACZ,sBAAsB;4BACtB,eAAe;4BACf,eAAe;4BACf,oBAAoB;4BACpB,kBAAkB;yBACnB;wBACD,SAAS,EAAE;4BACT,kBAAkB;4BAClB,kBAAkB;4BAClB,cAAc;4BACdjB,gBAAa;yBACd;wBACD,OAAO,EAAE;4BACP,sBAAsB;4BACtB,eAAe;4BACf,eAAe;4BACf,oBAAoB;4BACpB,kBAAkB;yBACnB;qBACF;;;;wBAnCQ,aAAa;wBAEb,kBAAkB;wBAClB,cAAc;;;QA0DvB,0BAAC;KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
